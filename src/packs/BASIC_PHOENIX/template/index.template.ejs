<%

let entitysnake = Formatter.snakeCase(entity.name)
let entitypluralsnake = Formatter.snakeCase(Formatter.plural(entity.name))
let entitypluralnormal = Formatter.normal(Formatter.plural(entity.name))
let entityNormal = Formatter.normal(entity.name)

let meta = {
	creates: {
		fileName: "lib/" 
		+ Formatter.snakeCase(APPNAME) 
		+ "_web/templates/" 
		+ Formatter.snakeCase(entity.getName()) 
		+ "/index.html.eex"
	},
	depends_on: [
		{ template: "../controller/action_index.template.ejs", data: {entity: entity} },
		{ template: "../view/view.template.ejs", data: {entity: entity} }
	]
} 


function fmtName(propName) {
    return Formatter.snakeCase(propName)
}


%>

<h1>Listing <%=entitypluralnormal %></h1>

<table>
  <thead>
	<tr>
		<% entity.getProps().forEach(function(p) { %>
			<th><%= p.getName() %></th>
		<% }) %>
      <th></th>
    </tr>
  </thead>
  <tbody>
	<%%= for <%=entitysnake %> <- @<%=entitypluralsnake %> do %%>
		<tr>
		<% entity.getProps().forEach(function(p) { %>
			<td><%%= <%=entitysnake %>.<%= fmtName(p.getName()) %> %%></td>
		<% }) %>
		

		<td>
			<!-- start actions -->
			<!-- end actions -->
		</td>
		</tr>
	<%% end %%>
  </tbody>
</table>

<span><%%= link "New <%=entityNormal %>", to: Routes.<%=entitysnake %>_path(@conn, :new) %%></span>
