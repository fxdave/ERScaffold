<%

let contextcamel = Formatter.upperCamelCase(Formatter.plural(entity.context))
let appcamel = Formatter.upperCamelCase(APPNAME)
let appsnake = Formatter.snakeCase(APPNAME)
let entitycamel = Formatter.upperCamelCase(entity.name)
let entitypluralsnake = Formatter.snakeCase(Formatter.plural(entity.name))
let entitysnake = Formatter.snakeCase(entity.name)

let meta = {
	extends: {
		fileName: "lib/" + appsnake + "_web/controllers/" + entitysnake + "_controller.ex",
		section: "# methods",
		place: "after"
	},
	depends_on: [
		{ tempalte: "./controller.template.js", data: {entity: entity} }
	]
} 

%>

def delete(conn, %{"id" => id}) do
	<%=entitysnake %> = <%=contextcamel %>.get_<%=entitysnake %>!(id)
	{:ok, _<%=entitysnake %>} = <%=contextcamel %>.delete_<%=entitysnake %>(<%=entitysnake %>)

	conn
	|> put_flash(:info, "<%=entitycamel %> deleted successfully.")
	|> redirect(to: Routes.<%=entitysnake %>_path(conn, :index))
end